--- build/spotify-web-api-original.yaml	2024-11-27 13:08:58.841785309 +0100
+++ build/spotify-web-api-fixed.yaml	2024-11-27 14:17:31.138979501 +0100
@@ -2,11 +2,8 @@
 info:
   description: |
     You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.
-
     In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href="https://developer.spotify.com/documentation/general/guides/authorization-guide/">OAuth 2.0</a>.
-
     The base URI for all Web API requests is `https://api.spotify.com/v1`.
-
     Need help? See our <a href="https://developer.spotify.com/documentation/web-api/guides/">Web API guides</a> for more information, or visit the <a href="https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer">Spotify for Developers community forum</a> to ask questions and connect with other developers.
   version: 2024.11.2
   title: Spotify Web API with fixes and improvements from sonallux
@@ -670,9 +667,7 @@
           title: Query
           description: |
             Your search query.
-
             You can narrow down your search using field filters. The available filters are `album`, `artist`, `track`, `year`, `upc`, `tag:hipster`, `tag:new`, `isrc`, and `genre`. Each field filter only applies to certain result types.
-
             The `artist` and `year` filters can be used while searching albums, artists and tracks. You can filter on a single `year` or a range (e.g. 1955-1960).<br />
             The `album` filter can be used while searching albums and tracks.<br />
             The `genre` filter can be used while searching artists and tracks.<br />
@@ -2385,7 +2380,6 @@
         Get Recommendations
       description: |
         Recommendations are generated based on the available information for a given seed entity and matched against similar artists and tracks. If there is sufficient information about the provided seeds, a list of tracks will be returned together with pool size details.
-
         For artists and tracks that are very new or obscure there might not be enough data to generate a list of tracks.
       parameters:
       - name: limit
@@ -4093,7 +4087,6 @@
             - `market` - The content item is not available in the given market.
             - `product` - The content item is not available for the user's subscription type.
             - `explicit` - The content item is explicit and the user's account is set to not play explicit content.
-
             Additional reasons may be added in the future.
             **Note**: If you use this field, make sure that your application safely handles unknown values.
     AlbumRestrictionObject:
@@ -4120,7 +4113,6 @@
             - `market` - The content item is not available in the given market.
             - `product` - The content item is not available for the user's subscription type.
             - `explicit` - The content item is explicit and the user's account is set to not play explicit content.
-
             Additional reasons may be added in the future.
             **Note**: If you use this field, make sure that your application safely handles unknown values.
     ChapterRestrictionObject:
@@ -4135,12 +4127,13 @@
             - `product` - The content item is not available for the user's subscription type.
             - `explicit` - The content item is explicit and the user's account is set to not play explicit content.
             - `payment_required` - Payment is required to play the content item.
-
             Additional reasons may be added in the future.
             **Note**: If you use this field, make sure that your application safely handles unknown values.
     ArtistObject:
       type: object
       x-spotify-docs-type: ArtistObject
+      required:
+      - name
       properties:
         external_urls:
           allOf:
@@ -4196,6 +4189,8 @@
     SimplifiedArtistObject:
       type: object
       x-spotify-docs-type: SimplifiedArtistObject
+      required:
+      - name
       properties:
         external_urls:
           allOf:
@@ -4227,6 +4222,9 @@
     PlayHistoryObject:
       type: object
       x-spotify-docs-type: PlayHistoryObject
+      required:
+      - track
+      - played_at
       properties:
         track:
           allOf:
@@ -4244,6 +4242,8 @@
     PlaylistTrackObject:
       type: object
       x-spotify-docs-type: PlaylistTrackObject
+      required:
+      - track
       properties:
         added_at:
           type: string
@@ -4392,6 +4392,14 @@
     PrivateUserObject:
       type: object
       x-spotify-docs-type: PrivateUserObject
+      required:
+      - display_name
+      - external_urls
+      - followers
+      - href
+      - id
+      - type
+      - uri
       properties:
         country:
           type: string
@@ -4825,7 +4833,6 @@
           type: array
           description: |
             Pitch content is given by a “chroma” vector, corresponding to the 12 pitch classes C, C#, D to B, with values ranging from 0 to 1 that describe the relative dominance of every pitch in the chromatic scale. For example a C Major chord would likely be represented by large values of C, E and G (i.e. classes 0, 4, and 7).
-
             Vectors are normalized to 1 by their strongest dimension, therefore noisy sounds are likely represented by values that are all close to 1, while pure tones are described by one value at 1 (the pitch) and others near 0.
             As can be seen below, the 12 vector indices are a combination of low-power spectrum values at their respective pitch frequencies.
             ![pitch vector](https://developer.spotify.com/assets/audio/Pitch_vector.png)
@@ -4841,10 +4848,8 @@
           type: array
           description: |
             Timbre is the quality of a musical note or sound that distinguishes different types of musical instruments, or voices. It is a complex notion also referred to as sound color, texture, or tone quality, and is derived from the shape of a segment’s spectro-temporal surface, independently of pitch and loudness. The timbre feature is a vector that includes 12 unbounded values roughly centered around 0. Those values are high level abstractions of the spectral surface, ordered by degree of importance.
-
             For completeness however, the first dimension represents the average loudness of the segment; second emphasizes brightness; third is more closely correlated to the flatness of a sound; fourth to sounds with a stronger attack; etc. See an image below representing the 12 basis functions (i.e. template segments).
             ![timbre basis functions](https://developer.spotify.com/assets/audio/Timbre_basis_functions.png)
-
             The actual timbre of the segment is best described as a linear combination of these 12 basis functions weighted by the coefficient values: timbre = c1 x b1 + c2 x b2 + ... + c12 x b12, where c1 to c12 represent the 12 coefficients and b1 to b12 the 12 basis functions as displayed below. Timbre vectors are best used in comparison with each other.
           items:
             type: number
@@ -5122,6 +5127,8 @@
     CursorPagingObject:
       type: object
       x-spotify-docs-type: CursorPagingObject
+      required:
+      - "cursors"
       properties:
         href:
           type: string
@@ -5147,6 +5154,8 @@
       allOf:
       - $ref: "#/components/schemas/CursorPagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
@@ -5158,6 +5167,8 @@
       allOf:
       - $ref: "#/components/schemas/CursorPagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
@@ -5214,6 +5225,8 @@
       allOf:
       - $ref: "#/components/schemas/PagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
@@ -5236,6 +5249,8 @@
       allOf:
       - $ref: "#/components/schemas/PagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
@@ -5247,6 +5262,8 @@
       allOf:
       - $ref: "#/components/schemas/PagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
@@ -5258,6 +5275,8 @@
       allOf:
       - $ref: "#/components/schemas/PagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
@@ -5269,6 +5288,8 @@
       allOf:
       - $ref: "#/components/schemas/PagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
@@ -5280,6 +5301,8 @@
       allOf:
       - $ref: "#/components/schemas/PagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
@@ -5291,6 +5314,8 @@
       allOf:
       - $ref: "#/components/schemas/PagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
@@ -5302,6 +5327,7 @@
       allOf:
       - $ref: "#/components/schemas/PagingObject"
       - type: object
+        required: [items]
         properties:
           items:
             type: array
@@ -5313,6 +5339,8 @@
       allOf:
       - $ref: "#/components/schemas/PagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
@@ -5324,6 +5352,8 @@
       allOf:
       - $ref: "#/components/schemas/PagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
@@ -5335,6 +5365,8 @@
       allOf:
       - $ref: "#/components/schemas/PagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
@@ -5346,6 +5378,8 @@
       allOf:
       - $ref: "#/components/schemas/PagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
@@ -5357,6 +5391,8 @@
       allOf:
       - $ref: "#/components/schemas/PagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
@@ -5368,6 +5404,8 @@
       allOf:
       - $ref: "#/components/schemas/PagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
@@ -5379,6 +5417,8 @@
       allOf:
       - $ref: "#/components/schemas/PagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
@@ -5564,6 +5604,19 @@
     SimplifiedPlaylistObject:
       type: object
       x-spotify-docs-type: SimplifiedPlaylistObject
+      required:
+      - id
+      - name
+      - description
+      - collaborative
+      - href
+      - images
+      - owner 
+      - public
+      - snapshot_id
+      - tracks
+      - type
+      - uri
       properties:
         collaborative:
           type: boolean
@@ -5708,10 +5761,13 @@
     TrackObject:
       type: object
       x-spotify-docs-type: TrackObject
+      required:
+      - name
       properties:
         album:
           allOf:
           - $ref: "#/components/schemas/SimplifiedAlbumObject"
+          - $ref: '#/components/schemas/LocalFileNoAlbumObject'
           description: |
             The album on which the track appears. The album object includes a link in `href` to full information about the album.
         artists:
@@ -6324,6 +6380,19 @@
               $ref: "#/components/schemas/SimplifiedArtistObject"
             description: |
               The artists of the album. Each artist object includes a link in `href` to more detailed information about the artist.
+    LocalFileNoAlbumObject:
+      type: object
+      required:
+      - type
+      properties:
+        type:
+          type: string
+        artists:
+          type: array
+          items:
+            $ref: '#/components/schemas/SimplifiedArtistObject'
+          description: |
+            The artists of the album. Each artist object includes a link in `href` to more detailed information about the artist.
     ArtistDiscographyAlbumObject:
       x-spotify-docs-type: ArtistDiscographyAlbumObject
       allOf:
@@ -6728,6 +6797,8 @@
       allOf:
       - $ref: "#/components/schemas/PagingObject"
       - type: object
+        required:
+        - items
         properties:
           items:
             type: array
